syntax = "proto3";

package saser.strecku.v1;

import "saser/strecku/v1/store.proto";
import "saser/strecku/v1/user.proto";

option go_package = "github.com/Saser/strecku/saser/strecku/v1;streckuv1";
option java_package = "se.saser.strecku.v1";
option java_multiple_files = true;
option java_outer_classname = "StreckUProto";

// StreckU is a service for buying things on credit.
service StreckU {
  // GetUser gets a single user.
  rpc GetUser(GetUserRequest) returns (User);

  // ListUsers lists users.
  rpc ListUsers(ListUsersRequest) returns (ListUsersResponse);

  // CreateUser creates a new user.
  rpc CreateUser(CreateUserRequest) returns (User);

  // GetStore gets a single store.
  rpc GetStore(GetStoreRequest) returns (Store);

  // CreateStore creates a new store.
  rpc CreateStore(CreateStoreRequest) returns (Store);
}

// GetUserRequest is the request message for GetUser.
message GetUserRequest {
  // name is the resource name of the user to get.
  // Format: users/{user}
  // Required.
  string name = 1;
}

// ListUsersRequest is the request message for ListUsers.
//
// (-- api-linter: core::0132::request-parent-required=disabled
//     aip.dev/not-precedent: Users are top-level resources. --)
message ListUsersRequest {
  // page_size is the maximum number of users to return.
  // If unspecified, the server will choose a suitable number.
  int32 page_size = 1;

  // page_token contains an opaque string used to get the next page of
  // results. It is usually provided by the previous call to ListUsers.
  // If unspecified, the first page will be returned.
  string page_token = 2;
}

// ListUsersResponse is the response message for ListUsers.
message ListUsersResponse {
  // users contains the page of users.
  repeated User users = 1;

  // next_page_token contains an opaque string used to get the next page of
  // results. Provide this in a subsequent call to ListUsers.
  // If this field is empty, there are no more pages.
  string next_page_token = 2;
}

// CreateUserRequest is the request message for CreateUser.
//
// (-- api-linter: core::0133::request-parent-required=disabled
//     aip.dev/not-precedent: Users are top-level resources. --)
message CreateUserRequest {
  // user is the user to be created.
  // Required.
  User user = 1;

  // password contains the password this user should use to authenticate.
  // Required.
  //
  // (-- api-linter: core::0133::request-unknown-fields=disabled
  //     aip.dev/not-precedent: A password is required for each user. --)
  string password = 2;
}

// GetStoreRequest is the request message for GetStore.
message GetStoreRequest {
  // name is the resource name of the store to get.
  // Format: stores/{store}
  // Required.
  string name = 1;
}

// CreateStoreRequest is the request message for CreateStore.
//
// (-- api-linter: core::0133::request-parent-required=disabled
//     aip.dev/not-precedent: Stores are top-level resources. --)
message CreateStoreRequest {
  // store is the store to be created.
  // Required.
  Store store = 1;
}
