// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.13.0
// source: saser/strecku/v1/strecku.proto

package streckuv1

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// GetUserRequest is the request message for GetUser.
type GetUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// name is the resource name of the user to get.
	// Format: users/{user}
	// Required.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *GetUserRequest) Reset() {
	*x = GetUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saser_strecku_v1_strecku_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserRequest) ProtoMessage() {}

func (x *GetUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saser_strecku_v1_strecku_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserRequest.ProtoReflect.Descriptor instead.
func (*GetUserRequest) Descriptor() ([]byte, []int) {
	return file_saser_strecku_v1_strecku_proto_rawDescGZIP(), []int{0}
}

func (x *GetUserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// ListUsersRequest is the request message for ListUsers.
//
// (-- api-linter: core::0132::request-parent-required=disabled
//     aip.dev/not-precedent: Users are top-level resources. --)
type ListUsersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// page_size is the maximum number of users to return.
	// If unspecified, the server will choose a suitable number.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// page_token contains an opaque string used to get the next page of
	// results. It is usually provided by the previous call to ListUsers.
	// If unspecified, the first page will be returned.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
}

func (x *ListUsersRequest) Reset() {
	*x = ListUsersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saser_strecku_v1_strecku_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersRequest) ProtoMessage() {}

func (x *ListUsersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saser_strecku_v1_strecku_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersRequest.ProtoReflect.Descriptor instead.
func (*ListUsersRequest) Descriptor() ([]byte, []int) {
	return file_saser_strecku_v1_strecku_proto_rawDescGZIP(), []int{1}
}

func (x *ListUsersRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListUsersRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

// ListUsersResponse is the response message for ListUsers.
type ListUsersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// users contains the page of users.
	Users []*User `protobuf:"bytes,1,rep,name=users,proto3" json:"users,omitempty"`
	// next_page_token contains an opaque string used to get the next page of
	// results. Provide this in a subsequent call to ListUsers.
	// If this field is empty, there are no more pages.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListUsersResponse) Reset() {
	*x = ListUsersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saser_strecku_v1_strecku_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListUsersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListUsersResponse) ProtoMessage() {}

func (x *ListUsersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_saser_strecku_v1_strecku_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListUsersResponse.ProtoReflect.Descriptor instead.
func (*ListUsersResponse) Descriptor() ([]byte, []int) {
	return file_saser_strecku_v1_strecku_proto_rawDescGZIP(), []int{2}
}

func (x *ListUsersResponse) GetUsers() []*User {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *ListUsersResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// CreateUserRequest is the request message for CreateUser.
//
// (-- api-linter: core::0133::request-parent-required=disabled
//     aip.dev/not-precedent: Users are top-level resources. --)
type CreateUserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// user is the user to be created.
	// Required.
	User *User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	// password contains the password this user should use to authenticate.
	// Required.
	//
	// (-- api-linter: core::0133::request-unknown-fields=disabled
	//     aip.dev/not-precedent: A password is required for each user. --)
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *CreateUserRequest) Reset() {
	*x = CreateUserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_saser_strecku_v1_strecku_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateUserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateUserRequest) ProtoMessage() {}

func (x *CreateUserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_saser_strecku_v1_strecku_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateUserRequest.ProtoReflect.Descriptor instead.
func (*CreateUserRequest) Descriptor() ([]byte, []int) {
	return file_saser_strecku_v1_strecku_proto_rawDescGZIP(), []int{3}
}

func (x *CreateUserRequest) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateUserRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

var File_saser_strecku_v1_strecku_proto protoreflect.FileDescriptor

var file_saser_strecku_v1_strecku_proto_rawDesc = []byte{
	0x0a, 0x1e, 0x73, 0x61, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x75, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x10, 0x73, 0x61, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x75, 0x2e,
	0x76, 0x31, 0x1a, 0x1b, 0x73, 0x61, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x63, 0x6b,
	0x75, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x24, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x4e, 0x0a, 0x10, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x69, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x05, 0x75, 0x73,
	0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x61, 0x73, 0x65,
	0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0x5b, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2a, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x73, 0x61, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x63, 0x6b, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x32, 0xef, 0x01,
	0x0a, 0x07, 0x53, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x55, 0x12, 0x43, 0x0a, 0x07, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x20, 0x2e, 0x73, 0x61, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72,
	0x65, 0x63, 0x6b, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x61, 0x73, 0x65, 0x72, 0x2e, 0x73,
	0x74, 0x72, 0x65, 0x63, 0x6b, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x54,
	0x0a, 0x09, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x22, 0x2e, 0x73, 0x61,
	0x73, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x23, 0x2e, 0x73, 0x61, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x75, 0x2e,
	0x76, 0x31, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x23, 0x2e, 0x73, 0x61, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65, 0x63,
	0x6b, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x73, 0x61, 0x73, 0x65, 0x72, 0x2e,
	0x73, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x75, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x42,
	0x5a, 0x0a, 0x13, 0x73, 0x65, 0x2e, 0x73, 0x61, 0x73, 0x65, 0x72, 0x2e, 0x73, 0x74, 0x72, 0x65,
	0x63, 0x6b, 0x75, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x55, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x33, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x53, 0x61, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x75,
	0x2f, 0x73, 0x61, 0x73, 0x65, 0x72, 0x2f, 0x73, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x75, 0x2f, 0x76,
	0x31, 0x3b, 0x73, 0x74, 0x72, 0x65, 0x63, 0x6b, 0x75, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_saser_strecku_v1_strecku_proto_rawDescOnce sync.Once
	file_saser_strecku_v1_strecku_proto_rawDescData = file_saser_strecku_v1_strecku_proto_rawDesc
)

func file_saser_strecku_v1_strecku_proto_rawDescGZIP() []byte {
	file_saser_strecku_v1_strecku_proto_rawDescOnce.Do(func() {
		file_saser_strecku_v1_strecku_proto_rawDescData = protoimpl.X.CompressGZIP(file_saser_strecku_v1_strecku_proto_rawDescData)
	})
	return file_saser_strecku_v1_strecku_proto_rawDescData
}

var file_saser_strecku_v1_strecku_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_saser_strecku_v1_strecku_proto_goTypes = []interface{}{
	(*GetUserRequest)(nil),    // 0: saser.strecku.v1.GetUserRequest
	(*ListUsersRequest)(nil),  // 1: saser.strecku.v1.ListUsersRequest
	(*ListUsersResponse)(nil), // 2: saser.strecku.v1.ListUsersResponse
	(*CreateUserRequest)(nil), // 3: saser.strecku.v1.CreateUserRequest
	(*User)(nil),              // 4: saser.strecku.v1.User
}
var file_saser_strecku_v1_strecku_proto_depIdxs = []int32{
	4, // 0: saser.strecku.v1.ListUsersResponse.users:type_name -> saser.strecku.v1.User
	4, // 1: saser.strecku.v1.CreateUserRequest.user:type_name -> saser.strecku.v1.User
	0, // 2: saser.strecku.v1.StreckU.GetUser:input_type -> saser.strecku.v1.GetUserRequest
	1, // 3: saser.strecku.v1.StreckU.ListUsers:input_type -> saser.strecku.v1.ListUsersRequest
	3, // 4: saser.strecku.v1.StreckU.CreateUser:input_type -> saser.strecku.v1.CreateUserRequest
	4, // 5: saser.strecku.v1.StreckU.GetUser:output_type -> saser.strecku.v1.User
	2, // 6: saser.strecku.v1.StreckU.ListUsers:output_type -> saser.strecku.v1.ListUsersResponse
	4, // 7: saser.strecku.v1.StreckU.CreateUser:output_type -> saser.strecku.v1.User
	5, // [5:8] is the sub-list for method output_type
	2, // [2:5] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_saser_strecku_v1_strecku_proto_init() }
func file_saser_strecku_v1_strecku_proto_init() {
	if File_saser_strecku_v1_strecku_proto != nil {
		return
	}
	file_saser_strecku_v1_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_saser_strecku_v1_strecku_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saser_strecku_v1_strecku_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saser_strecku_v1_strecku_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListUsersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_saser_strecku_v1_strecku_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateUserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_saser_strecku_v1_strecku_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_saser_strecku_v1_strecku_proto_goTypes,
		DependencyIndexes: file_saser_strecku_v1_strecku_proto_depIdxs,
		MessageInfos:      file_saser_strecku_v1_strecku_proto_msgTypes,
	}.Build()
	File_saser_strecku_v1_strecku_proto = out.File
	file_saser_strecku_v1_strecku_proto_rawDesc = nil
	file_saser_strecku_v1_strecku_proto_goTypes = nil
	file_saser_strecku_v1_strecku_proto_depIdxs = nil
}
